// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/notebooks/v1/runtime.proto

package com.google.cloud.notebooks.v1;

/**
 * <pre>
 * Specifies the selection and configuration of software inside the runtime.
 * The properties to set on runtime.
 * Properties keys are specified in `key:value` format, for example:
 * * `idle_shutdown: true`
 * * `idle_shutdown_timeout: 180`
 * * `report-system-health: true`
 * </pre>
 *
 * Protobuf type {@code google.cloud.notebooks.v1.RuntimeSoftwareConfig}
 */
public final class RuntimeSoftwareConfig extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.cloud.notebooks.v1.RuntimeSoftwareConfig)
    RuntimeSoftwareConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use RuntimeSoftwareConfig.newBuilder() to construct.
  private RuntimeSoftwareConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RuntimeSoftwareConfig() {
    notebookUpgradeSchedule_ = "";
    customGpuDriverPath_ = "";
    postStartupScript_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new RuntimeSoftwareConfig();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private RuntimeSoftwareConfig(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            notebookUpgradeSchedule_ = s;
            break;
          }
          case 16: {
            bitField0_ |= 0x00000001;
            enableHealthMonitoring_ = input.readBool();
            break;
          }
          case 24: {
            bitField0_ |= 0x00000002;
            idleShutdown_ = input.readBool();
            break;
          }
          case 32: {

            idleShutdownTimeout_ = input.readInt32();
            break;
          }
          case 40: {

            installGpuDriver_ = input.readBool();
            break;
          }
          case 50: {
            java.lang.String s = input.readStringRequireUtf8();

            customGpuDriverPath_ = s;
            break;
          }
          case 58: {
            java.lang.String s = input.readStringRequireUtf8();

            postStartupScript_ = s;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.cloud.notebooks.v1.RuntimeProto.internal_static_google_cloud_notebooks_v1_RuntimeSoftwareConfig_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.notebooks.v1.RuntimeProto.internal_static_google_cloud_notebooks_v1_RuntimeSoftwareConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.notebooks.v1.RuntimeSoftwareConfig.class, com.google.cloud.notebooks.v1.RuntimeSoftwareConfig.Builder.class);
  }

  private int bitField0_;
  public static final int NOTEBOOK_UPGRADE_SCHEDULE_FIELD_NUMBER = 1;
  private volatile java.lang.Object notebookUpgradeSchedule_;
  /**
   * <pre>
   * Cron expression in UTC timezone, used to schedule instance auto upgrade.
   * Please follow the [cron format](https://en.wikipedia.org/wiki/Cron).
   * </pre>
   *
   * <code>string notebook_upgrade_schedule = 1;</code>
   * @return The notebookUpgradeSchedule.
   */
  @java.lang.Override
  public java.lang.String getNotebookUpgradeSchedule() {
    java.lang.Object ref = notebookUpgradeSchedule_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      notebookUpgradeSchedule_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Cron expression in UTC timezone, used to schedule instance auto upgrade.
   * Please follow the [cron format](https://en.wikipedia.org/wiki/Cron).
   * </pre>
   *
   * <code>string notebook_upgrade_schedule = 1;</code>
   * @return The bytes for notebookUpgradeSchedule.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNotebookUpgradeScheduleBytes() {
    java.lang.Object ref = notebookUpgradeSchedule_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      notebookUpgradeSchedule_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ENABLE_HEALTH_MONITORING_FIELD_NUMBER = 2;
  private boolean enableHealthMonitoring_;
  /**
   * <pre>
   * Verifies core internal services are running.
   * Default: True
   * </pre>
   *
   * <code>optional bool enable_health_monitoring = 2;</code>
   * @return Whether the enableHealthMonitoring field is set.
   */
  @java.lang.Override
  public boolean hasEnableHealthMonitoring() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Verifies core internal services are running.
   * Default: True
   * </pre>
   *
   * <code>optional bool enable_health_monitoring = 2;</code>
   * @return The enableHealthMonitoring.
   */
  @java.lang.Override
  public boolean getEnableHealthMonitoring() {
    return enableHealthMonitoring_;
  }

  public static final int IDLE_SHUTDOWN_FIELD_NUMBER = 3;
  private boolean idleShutdown_;
  /**
   * <pre>
   * Runtime will automatically shutdown after idle_shutdown_time.
   * Default: True
   * </pre>
   *
   * <code>optional bool idle_shutdown = 3;</code>
   * @return Whether the idleShutdown field is set.
   */
  @java.lang.Override
  public boolean hasIdleShutdown() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Runtime will automatically shutdown after idle_shutdown_time.
   * Default: True
   * </pre>
   *
   * <code>optional bool idle_shutdown = 3;</code>
   * @return The idleShutdown.
   */
  @java.lang.Override
  public boolean getIdleShutdown() {
    return idleShutdown_;
  }

  public static final int IDLE_SHUTDOWN_TIMEOUT_FIELD_NUMBER = 4;
  private int idleShutdownTimeout_;
  /**
   * <pre>
   * Time in minutes to wait before shuting down runtime. Default: 180 minutes
   * </pre>
   *
   * <code>int32 idle_shutdown_timeout = 4;</code>
   * @return The idleShutdownTimeout.
   */
  @java.lang.Override
  public int getIdleShutdownTimeout() {
    return idleShutdownTimeout_;
  }

  public static final int INSTALL_GPU_DRIVER_FIELD_NUMBER = 5;
  private boolean installGpuDriver_;
  /**
   * <pre>
   * Install Nvidia Driver automatically.
   * </pre>
   *
   * <code>bool install_gpu_driver = 5;</code>
   * @return The installGpuDriver.
   */
  @java.lang.Override
  public boolean getInstallGpuDriver() {
    return installGpuDriver_;
  }

  public static final int CUSTOM_GPU_DRIVER_PATH_FIELD_NUMBER = 6;
  private volatile java.lang.Object customGpuDriverPath_;
  /**
   * <pre>
   * Specify a custom Cloud Storage path where the GPU driver is stored.
   * If not specified, we'll automatically choose from official GPU drivers.
   * </pre>
   *
   * <code>string custom_gpu_driver_path = 6;</code>
   * @return The customGpuDriverPath.
   */
  @java.lang.Override
  public java.lang.String getCustomGpuDriverPath() {
    java.lang.Object ref = customGpuDriverPath_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      customGpuDriverPath_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Specify a custom Cloud Storage path where the GPU driver is stored.
   * If not specified, we'll automatically choose from official GPU drivers.
   * </pre>
   *
   * <code>string custom_gpu_driver_path = 6;</code>
   * @return The bytes for customGpuDriverPath.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCustomGpuDriverPathBytes() {
    java.lang.Object ref = customGpuDriverPath_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      customGpuDriverPath_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int POST_STARTUP_SCRIPT_FIELD_NUMBER = 7;
  private volatile java.lang.Object postStartupScript_;
  /**
   * <pre>
   * Path to a Bash script that automatically runs after a notebook instance
   * fully boots up. The path must be a URL or
   * Cloud Storage path (`gs://path-to-file/file-name`).
   * </pre>
   *
   * <code>string post_startup_script = 7;</code>
   * @return The postStartupScript.
   */
  @java.lang.Override
  public java.lang.String getPostStartupScript() {
    java.lang.Object ref = postStartupScript_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      postStartupScript_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Path to a Bash script that automatically runs after a notebook instance
   * fully boots up. The path must be a URL or
   * Cloud Storage path (`gs://path-to-file/file-name`).
   * </pre>
   *
   * <code>string post_startup_script = 7;</code>
   * @return The bytes for postStartupScript.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPostStartupScriptBytes() {
    java.lang.Object ref = postStartupScript_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      postStartupScript_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(notebookUpgradeSchedule_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, notebookUpgradeSchedule_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeBool(2, enableHealthMonitoring_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeBool(3, idleShutdown_);
    }
    if (idleShutdownTimeout_ != 0) {
      output.writeInt32(4, idleShutdownTimeout_);
    }
    if (installGpuDriver_ != false) {
      output.writeBool(5, installGpuDriver_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(customGpuDriverPath_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, customGpuDriverPath_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(postStartupScript_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, postStartupScript_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(notebookUpgradeSchedule_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, notebookUpgradeSchedule_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, enableHealthMonitoring_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, idleShutdown_);
    }
    if (idleShutdownTimeout_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, idleShutdownTimeout_);
    }
    if (installGpuDriver_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, installGpuDriver_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(customGpuDriverPath_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, customGpuDriverPath_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(postStartupScript_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, postStartupScript_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.cloud.notebooks.v1.RuntimeSoftwareConfig)) {
      return super.equals(obj);
    }
    com.google.cloud.notebooks.v1.RuntimeSoftwareConfig other = (com.google.cloud.notebooks.v1.RuntimeSoftwareConfig) obj;

    if (!getNotebookUpgradeSchedule()
        .equals(other.getNotebookUpgradeSchedule())) return false;
    if (hasEnableHealthMonitoring() != other.hasEnableHealthMonitoring()) return false;
    if (hasEnableHealthMonitoring()) {
      if (getEnableHealthMonitoring()
          != other.getEnableHealthMonitoring()) return false;
    }
    if (hasIdleShutdown() != other.hasIdleShutdown()) return false;
    if (hasIdleShutdown()) {
      if (getIdleShutdown()
          != other.getIdleShutdown()) return false;
    }
    if (getIdleShutdownTimeout()
        != other.getIdleShutdownTimeout()) return false;
    if (getInstallGpuDriver()
        != other.getInstallGpuDriver()) return false;
    if (!getCustomGpuDriverPath()
        .equals(other.getCustomGpuDriverPath())) return false;
    if (!getPostStartupScript()
        .equals(other.getPostStartupScript())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NOTEBOOK_UPGRADE_SCHEDULE_FIELD_NUMBER;
    hash = (53 * hash) + getNotebookUpgradeSchedule().hashCode();
    if (hasEnableHealthMonitoring()) {
      hash = (37 * hash) + ENABLE_HEALTH_MONITORING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getEnableHealthMonitoring());
    }
    if (hasIdleShutdown()) {
      hash = (37 * hash) + IDLE_SHUTDOWN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIdleShutdown());
    }
    hash = (37 * hash) + IDLE_SHUTDOWN_TIMEOUT_FIELD_NUMBER;
    hash = (53 * hash) + getIdleShutdownTimeout();
    hash = (37 * hash) + INSTALL_GPU_DRIVER_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getInstallGpuDriver());
    hash = (37 * hash) + CUSTOM_GPU_DRIVER_PATH_FIELD_NUMBER;
    hash = (53 * hash) + getCustomGpuDriverPath().hashCode();
    hash = (37 * hash) + POST_STARTUP_SCRIPT_FIELD_NUMBER;
    hash = (53 * hash) + getPostStartupScript().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.notebooks.v1.RuntimeSoftwareConfig parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.notebooks.v1.RuntimeSoftwareConfig parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.notebooks.v1.RuntimeSoftwareConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.notebooks.v1.RuntimeSoftwareConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.notebooks.v1.RuntimeSoftwareConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.notebooks.v1.RuntimeSoftwareConfig parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.notebooks.v1.RuntimeSoftwareConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.notebooks.v1.RuntimeSoftwareConfig parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.notebooks.v1.RuntimeSoftwareConfig parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.cloud.notebooks.v1.RuntimeSoftwareConfig parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.notebooks.v1.RuntimeSoftwareConfig parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.notebooks.v1.RuntimeSoftwareConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.cloud.notebooks.v1.RuntimeSoftwareConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Specifies the selection and configuration of software inside the runtime.
   * The properties to set on runtime.
   * Properties keys are specified in `key:value` format, for example:
   * * `idle_shutdown: true`
   * * `idle_shutdown_timeout: 180`
   * * `report-system-health: true`
   * </pre>
   *
   * Protobuf type {@code google.cloud.notebooks.v1.RuntimeSoftwareConfig}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.cloud.notebooks.v1.RuntimeSoftwareConfig)
      com.google.cloud.notebooks.v1.RuntimeSoftwareConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.notebooks.v1.RuntimeProto.internal_static_google_cloud_notebooks_v1_RuntimeSoftwareConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.notebooks.v1.RuntimeProto.internal_static_google_cloud_notebooks_v1_RuntimeSoftwareConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.notebooks.v1.RuntimeSoftwareConfig.class, com.google.cloud.notebooks.v1.RuntimeSoftwareConfig.Builder.class);
    }

    // Construct using com.google.cloud.notebooks.v1.RuntimeSoftwareConfig.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      notebookUpgradeSchedule_ = "";

      enableHealthMonitoring_ = false;
      bitField0_ = (bitField0_ & ~0x00000001);
      idleShutdown_ = false;
      bitField0_ = (bitField0_ & ~0x00000002);
      idleShutdownTimeout_ = 0;

      installGpuDriver_ = false;

      customGpuDriverPath_ = "";

      postStartupScript_ = "";

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.cloud.notebooks.v1.RuntimeProto.internal_static_google_cloud_notebooks_v1_RuntimeSoftwareConfig_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.notebooks.v1.RuntimeSoftwareConfig getDefaultInstanceForType() {
      return com.google.cloud.notebooks.v1.RuntimeSoftwareConfig.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.notebooks.v1.RuntimeSoftwareConfig build() {
      com.google.cloud.notebooks.v1.RuntimeSoftwareConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.notebooks.v1.RuntimeSoftwareConfig buildPartial() {
      com.google.cloud.notebooks.v1.RuntimeSoftwareConfig result = new com.google.cloud.notebooks.v1.RuntimeSoftwareConfig(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.notebookUpgradeSchedule_ = notebookUpgradeSchedule_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.enableHealthMonitoring_ = enableHealthMonitoring_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.idleShutdown_ = idleShutdown_;
        to_bitField0_ |= 0x00000002;
      }
      result.idleShutdownTimeout_ = idleShutdownTimeout_;
      result.installGpuDriver_ = installGpuDriver_;
      result.customGpuDriverPath_ = customGpuDriverPath_;
      result.postStartupScript_ = postStartupScript_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.notebooks.v1.RuntimeSoftwareConfig) {
        return mergeFrom((com.google.cloud.notebooks.v1.RuntimeSoftwareConfig)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.notebooks.v1.RuntimeSoftwareConfig other) {
      if (other == com.google.cloud.notebooks.v1.RuntimeSoftwareConfig.getDefaultInstance()) return this;
      if (!other.getNotebookUpgradeSchedule().isEmpty()) {
        notebookUpgradeSchedule_ = other.notebookUpgradeSchedule_;
        onChanged();
      }
      if (other.hasEnableHealthMonitoring()) {
        setEnableHealthMonitoring(other.getEnableHealthMonitoring());
      }
      if (other.hasIdleShutdown()) {
        setIdleShutdown(other.getIdleShutdown());
      }
      if (other.getIdleShutdownTimeout() != 0) {
        setIdleShutdownTimeout(other.getIdleShutdownTimeout());
      }
      if (other.getInstallGpuDriver() != false) {
        setInstallGpuDriver(other.getInstallGpuDriver());
      }
      if (!other.getCustomGpuDriverPath().isEmpty()) {
        customGpuDriverPath_ = other.customGpuDriverPath_;
        onChanged();
      }
      if (!other.getPostStartupScript().isEmpty()) {
        postStartupScript_ = other.postStartupScript_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.cloud.notebooks.v1.RuntimeSoftwareConfig parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.cloud.notebooks.v1.RuntimeSoftwareConfig) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object notebookUpgradeSchedule_ = "";
    /**
     * <pre>
     * Cron expression in UTC timezone, used to schedule instance auto upgrade.
     * Please follow the [cron format](https://en.wikipedia.org/wiki/Cron).
     * </pre>
     *
     * <code>string notebook_upgrade_schedule = 1;</code>
     * @return The notebookUpgradeSchedule.
     */
    public java.lang.String getNotebookUpgradeSchedule() {
      java.lang.Object ref = notebookUpgradeSchedule_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        notebookUpgradeSchedule_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Cron expression in UTC timezone, used to schedule instance auto upgrade.
     * Please follow the [cron format](https://en.wikipedia.org/wiki/Cron).
     * </pre>
     *
     * <code>string notebook_upgrade_schedule = 1;</code>
     * @return The bytes for notebookUpgradeSchedule.
     */
    public com.google.protobuf.ByteString
        getNotebookUpgradeScheduleBytes() {
      java.lang.Object ref = notebookUpgradeSchedule_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        notebookUpgradeSchedule_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Cron expression in UTC timezone, used to schedule instance auto upgrade.
     * Please follow the [cron format](https://en.wikipedia.org/wiki/Cron).
     * </pre>
     *
     * <code>string notebook_upgrade_schedule = 1;</code>
     * @param value The notebookUpgradeSchedule to set.
     * @return This builder for chaining.
     */
    public Builder setNotebookUpgradeSchedule(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      notebookUpgradeSchedule_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Cron expression in UTC timezone, used to schedule instance auto upgrade.
     * Please follow the [cron format](https://en.wikipedia.org/wiki/Cron).
     * </pre>
     *
     * <code>string notebook_upgrade_schedule = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearNotebookUpgradeSchedule() {
      
      notebookUpgradeSchedule_ = getDefaultInstance().getNotebookUpgradeSchedule();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Cron expression in UTC timezone, used to schedule instance auto upgrade.
     * Please follow the [cron format](https://en.wikipedia.org/wiki/Cron).
     * </pre>
     *
     * <code>string notebook_upgrade_schedule = 1;</code>
     * @param value The bytes for notebookUpgradeSchedule to set.
     * @return This builder for chaining.
     */
    public Builder setNotebookUpgradeScheduleBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      notebookUpgradeSchedule_ = value;
      onChanged();
      return this;
    }

    private boolean enableHealthMonitoring_ ;
    /**
     * <pre>
     * Verifies core internal services are running.
     * Default: True
     * </pre>
     *
     * <code>optional bool enable_health_monitoring = 2;</code>
     * @return Whether the enableHealthMonitoring field is set.
     */
    @java.lang.Override
    public boolean hasEnableHealthMonitoring() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Verifies core internal services are running.
     * Default: True
     * </pre>
     *
     * <code>optional bool enable_health_monitoring = 2;</code>
     * @return The enableHealthMonitoring.
     */
    @java.lang.Override
    public boolean getEnableHealthMonitoring() {
      return enableHealthMonitoring_;
    }
    /**
     * <pre>
     * Verifies core internal services are running.
     * Default: True
     * </pre>
     *
     * <code>optional bool enable_health_monitoring = 2;</code>
     * @param value The enableHealthMonitoring to set.
     * @return This builder for chaining.
     */
    public Builder setEnableHealthMonitoring(boolean value) {
      bitField0_ |= 0x00000001;
      enableHealthMonitoring_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Verifies core internal services are running.
     * Default: True
     * </pre>
     *
     * <code>optional bool enable_health_monitoring = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearEnableHealthMonitoring() {
      bitField0_ = (bitField0_ & ~0x00000001);
      enableHealthMonitoring_ = false;
      onChanged();
      return this;
    }

    private boolean idleShutdown_ ;
    /**
     * <pre>
     * Runtime will automatically shutdown after idle_shutdown_time.
     * Default: True
     * </pre>
     *
     * <code>optional bool idle_shutdown = 3;</code>
     * @return Whether the idleShutdown field is set.
     */
    @java.lang.Override
    public boolean hasIdleShutdown() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Runtime will automatically shutdown after idle_shutdown_time.
     * Default: True
     * </pre>
     *
     * <code>optional bool idle_shutdown = 3;</code>
     * @return The idleShutdown.
     */
    @java.lang.Override
    public boolean getIdleShutdown() {
      return idleShutdown_;
    }
    /**
     * <pre>
     * Runtime will automatically shutdown after idle_shutdown_time.
     * Default: True
     * </pre>
     *
     * <code>optional bool idle_shutdown = 3;</code>
     * @param value The idleShutdown to set.
     * @return This builder for chaining.
     */
    public Builder setIdleShutdown(boolean value) {
      bitField0_ |= 0x00000002;
      idleShutdown_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Runtime will automatically shutdown after idle_shutdown_time.
     * Default: True
     * </pre>
     *
     * <code>optional bool idle_shutdown = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearIdleShutdown() {
      bitField0_ = (bitField0_ & ~0x00000002);
      idleShutdown_ = false;
      onChanged();
      return this;
    }

    private int idleShutdownTimeout_ ;
    /**
     * <pre>
     * Time in minutes to wait before shuting down runtime. Default: 180 minutes
     * </pre>
     *
     * <code>int32 idle_shutdown_timeout = 4;</code>
     * @return The idleShutdownTimeout.
     */
    @java.lang.Override
    public int getIdleShutdownTimeout() {
      return idleShutdownTimeout_;
    }
    /**
     * <pre>
     * Time in minutes to wait before shuting down runtime. Default: 180 minutes
     * </pre>
     *
     * <code>int32 idle_shutdown_timeout = 4;</code>
     * @param value The idleShutdownTimeout to set.
     * @return This builder for chaining.
     */
    public Builder setIdleShutdownTimeout(int value) {
      
      idleShutdownTimeout_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Time in minutes to wait before shuting down runtime. Default: 180 minutes
     * </pre>
     *
     * <code>int32 idle_shutdown_timeout = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearIdleShutdownTimeout() {
      
      idleShutdownTimeout_ = 0;
      onChanged();
      return this;
    }

    private boolean installGpuDriver_ ;
    /**
     * <pre>
     * Install Nvidia Driver automatically.
     * </pre>
     *
     * <code>bool install_gpu_driver = 5;</code>
     * @return The installGpuDriver.
     */
    @java.lang.Override
    public boolean getInstallGpuDriver() {
      return installGpuDriver_;
    }
    /**
     * <pre>
     * Install Nvidia Driver automatically.
     * </pre>
     *
     * <code>bool install_gpu_driver = 5;</code>
     * @param value The installGpuDriver to set.
     * @return This builder for chaining.
     */
    public Builder setInstallGpuDriver(boolean value) {
      
      installGpuDriver_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Install Nvidia Driver automatically.
     * </pre>
     *
     * <code>bool install_gpu_driver = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearInstallGpuDriver() {
      
      installGpuDriver_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object customGpuDriverPath_ = "";
    /**
     * <pre>
     * Specify a custom Cloud Storage path where the GPU driver is stored.
     * If not specified, we'll automatically choose from official GPU drivers.
     * </pre>
     *
     * <code>string custom_gpu_driver_path = 6;</code>
     * @return The customGpuDriverPath.
     */
    public java.lang.String getCustomGpuDriverPath() {
      java.lang.Object ref = customGpuDriverPath_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        customGpuDriverPath_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Specify a custom Cloud Storage path where the GPU driver is stored.
     * If not specified, we'll automatically choose from official GPU drivers.
     * </pre>
     *
     * <code>string custom_gpu_driver_path = 6;</code>
     * @return The bytes for customGpuDriverPath.
     */
    public com.google.protobuf.ByteString
        getCustomGpuDriverPathBytes() {
      java.lang.Object ref = customGpuDriverPath_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        customGpuDriverPath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Specify a custom Cloud Storage path where the GPU driver is stored.
     * If not specified, we'll automatically choose from official GPU drivers.
     * </pre>
     *
     * <code>string custom_gpu_driver_path = 6;</code>
     * @param value The customGpuDriverPath to set.
     * @return This builder for chaining.
     */
    public Builder setCustomGpuDriverPath(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      customGpuDriverPath_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specify a custom Cloud Storage path where the GPU driver is stored.
     * If not specified, we'll automatically choose from official GPU drivers.
     * </pre>
     *
     * <code>string custom_gpu_driver_path = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearCustomGpuDriverPath() {
      
      customGpuDriverPath_ = getDefaultInstance().getCustomGpuDriverPath();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specify a custom Cloud Storage path where the GPU driver is stored.
     * If not specified, we'll automatically choose from official GPU drivers.
     * </pre>
     *
     * <code>string custom_gpu_driver_path = 6;</code>
     * @param value The bytes for customGpuDriverPath to set.
     * @return This builder for chaining.
     */
    public Builder setCustomGpuDriverPathBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      customGpuDriverPath_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object postStartupScript_ = "";
    /**
     * <pre>
     * Path to a Bash script that automatically runs after a notebook instance
     * fully boots up. The path must be a URL or
     * Cloud Storage path (`gs://path-to-file/file-name`).
     * </pre>
     *
     * <code>string post_startup_script = 7;</code>
     * @return The postStartupScript.
     */
    public java.lang.String getPostStartupScript() {
      java.lang.Object ref = postStartupScript_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        postStartupScript_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Path to a Bash script that automatically runs after a notebook instance
     * fully boots up. The path must be a URL or
     * Cloud Storage path (`gs://path-to-file/file-name`).
     * </pre>
     *
     * <code>string post_startup_script = 7;</code>
     * @return The bytes for postStartupScript.
     */
    public com.google.protobuf.ByteString
        getPostStartupScriptBytes() {
      java.lang.Object ref = postStartupScript_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        postStartupScript_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Path to a Bash script that automatically runs after a notebook instance
     * fully boots up. The path must be a URL or
     * Cloud Storage path (`gs://path-to-file/file-name`).
     * </pre>
     *
     * <code>string post_startup_script = 7;</code>
     * @param value The postStartupScript to set.
     * @return This builder for chaining.
     */
    public Builder setPostStartupScript(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      postStartupScript_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Path to a Bash script that automatically runs after a notebook instance
     * fully boots up. The path must be a URL or
     * Cloud Storage path (`gs://path-to-file/file-name`).
     * </pre>
     *
     * <code>string post_startup_script = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearPostStartupScript() {
      
      postStartupScript_ = getDefaultInstance().getPostStartupScript();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Path to a Bash script that automatically runs after a notebook instance
     * fully boots up. The path must be a URL or
     * Cloud Storage path (`gs://path-to-file/file-name`).
     * </pre>
     *
     * <code>string post_startup_script = 7;</code>
     * @param value The bytes for postStartupScript to set.
     * @return This builder for chaining.
     */
    public Builder setPostStartupScriptBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      postStartupScript_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.cloud.notebooks.v1.RuntimeSoftwareConfig)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.notebooks.v1.RuntimeSoftwareConfig)
  private static final com.google.cloud.notebooks.v1.RuntimeSoftwareConfig DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.cloud.notebooks.v1.RuntimeSoftwareConfig();
  }

  public static com.google.cloud.notebooks.v1.RuntimeSoftwareConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RuntimeSoftwareConfig>
      PARSER = new com.google.protobuf.AbstractParser<RuntimeSoftwareConfig>() {
    @java.lang.Override
    public RuntimeSoftwareConfig parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new RuntimeSoftwareConfig(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<RuntimeSoftwareConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RuntimeSoftwareConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.notebooks.v1.RuntimeSoftwareConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

